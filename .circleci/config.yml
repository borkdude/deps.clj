# Clojure CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-clojure/ for more details
#
version: 2.1
jobs:
  jvm:
    docker:
      # specify the version you desire here
      - image: circleci/clojure:lein-2.8.1
    working_directory: ~/repo
    environment:
      LEIN_ROOT: "true"
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "deps.edn" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Install Clojure
          command: |
            wget -nc https://download.clojure.org/install/linux-install-1.10.3.998.sh
            chmod +x linux-install-1.10.3.998.sh
            sudo ./linux-install-1.10.3.998.sh
      - run:
          name: Install babashka
          command: |
            bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir ~
            sudo mv ~/bb /usr/local/bin/bb
      - run:
          name: Run JVM tests
          command: |
            bb jvm-test
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "deps.edn" }}
      - run:
          name: Create uberjar
          command: |
            mkdir -p /tmp/release
            lein do clean, uberjar
            VERSION=$(cat resources/DEPS_CLJ_VERSION)
            cp target/deps.clj-$VERSION-standalone.jar /tmp/release
      - store_artifacts:
          path: /tmp/release
          destination: release
  babashka:
    docker:
      # specify the version you desire here
      - image: circleci/clojure:lein-2.8.1
    working_directory: ~/repo
    environment:
      LEIN_ROOT: "true"
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "deps.edn" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      # - run:
      #     name: Install babashka
      #     command: |
      #       bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir ~
      #       sudo mv ~/bb /usr/local/bin/bb

      - run:
          name: Install babashka REVIEW
          command: |
            curl -sLO https://raw.githubusercontent.com/babashka/babashka/master/install
            chmod +x ./install
            sudo ./install --version 1.0.165-SNAPSHOT

      - run:
          name: Run babashka tests
          command: |
            bb babashka-test
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "deps.edn" }}
  linux:
    docker:
      - image: circleci/clojure:lein-2.8.1
    working_directory: ~/repo
    environment:
      LEIN_ROOT: "true"
      GRAALVM_HOME: /home/circleci/graalvm-ce-java11-21.0.0.2
      DEPS_CLJ_PLATFORM: linux # used in release script
      # BABASHKA_TEST_ENV: native
    steps:
      - checkout
      - restore_cache:
          keys:
            - linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
      - run:
          name: Install Clojure
          command: |
            wget https://download.clojure.org/install/linux-install-1.10.3.998.sh
            chmod +x linux-install-1.10.3.998.sh
            sudo ./linux-install-1.10.3.998.sh
      - run:
          name: Install babashka
          command: |
            bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir ~
            sudo mv ~/bb /usr/local/bin/bb
      - run:
          name: Install lsof
          command: |
            sudo apt-get install lsof
      - run:
          name: Install native dev tools
          command: |
            sudo apt-get update
            sudo apt-get -y install gcc g++ zlib1g-dev
      - run:
          name: Download GraalVM
          command: |
            cd ~
            if ! [ -d graalvm-ce-java11-21.0.0.2 ]; then
              curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-21.0.0.2/graalvm-ce-java11-linux-amd64-21.0.0.2.tar.gz
              tar xzf graalvm-ce-java11-linux-amd64-21.0.0.2.tar.gz
            fi
            "$GRAALVM_HOME/bin/gu" install native-image || true
      - run:
          name: Build binary
          command: |
            bb compile
          no_output_timeout: 30m
      - run:
          name: Run tests
          command: |
            bb exe-test
      - run:
          name: Release
          command: |
            .circleci/script/release
      - save_cache:
          paths:
            - ~/.m2
            - ~/graalvm-ce-java11-21.0.0.2
          key: linux-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
      - store_artifacts:
          path: /tmp/release
          destination: release
  mac:
    macos:
      xcode: "14.0.0"
    environment:
      GRAALVM_HOME: /Users/distiller/graalvm-ce-java11-21.0.0.2/Contents/Home
      DEPS_CLJ_PLATFORM: macos # used in release script
    steps:
      - checkout
      - restore_cache:
          keys:
            - mac-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
      - run:
          name: Install Clojure
          command: |
            .circleci/script/install-clojure /usr/local
      - run:
          name: Install babashka
          command: |
            bash <(curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install) --dir ~
            sudo mv ~/bb /usr/local/bin/bb
      - run:
          name: Install Leiningen
          command: |
            .circleci/script/install-leiningen
      - run:
          name: Download GraalVM
          command: |
            cd ~
            ls -la
            if ! [ -d graalvm-ce-java11-21.0.0.2 ]; then
              curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-21.0.0.2/graalvm-ce-java11-darwin-amd64-21.0.0.2.tar.gz
              tar xzf graalvm-ce-java11-darwin-amd64-21.0.0.2.tar.gz
            fi
            "$GRAALVM_HOME/bin/gu" install native-image || true
      - run:
          name: Build binary
          command: |
            bb compile
          no_output_timeout: 30m
      - run:
          name: Run tests
          command: |
            bb exe-test
      - run:
          name: Release
          command: |
            .circleci/script/release
      - save_cache:
          paths:
            - ~/.m2
            - ~/graalvm-ce-java11-21.0.0.2
          key: mac-{{ checksum "project.clj" }}-{{ checksum ".circleci/config.yml" }}
      - store_artifacts:
          path: /tmp/release
          destination: release
  deploy:
    docker:
      - image: circleci/clojure:lein-2.8.1
    working_directory: ~/repo
    environment:
      LEIN_ROOT: "true"
    steps:
      - checkout
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "project.clj" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: .circleci/script/deploy
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "project.clj" }}
  # docker:
  #   docker:
  #     - image: circleci/buildpack-deps:stretch
  #   steps:
  #     - checkout
  #     - setup_remote_docker:
  #         docker_layer_caching: true
  #     - run:
  #         name: Build Docker image
  #         command: .circleci/script/docker

workflows:
  version: 2
  ci:
    jobs:
      - jvm
      - babashka
      - linux
      - mac
      - deploy:
          filters:
            branches:
              only: master
          requires:
            - jvm
            - babashka
            - linux
            - mac
      # - docker:
      #     filters:
      #       branches:
      #         only: master
      #     requires:
      #       - jvm
      #       - linux
      #       - mac
